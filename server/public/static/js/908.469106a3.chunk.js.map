{"version":3,"file":"static/js/908.469106a3.chunk.js","mappings":"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","sources":["pages/Stats.jsx","utils/http.js","utils/api.js"],"sourcesContent":["import { Table, Row, Col, DatePicker } from 'antd';\nimport { Bar } from '@ant-design/charts';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StatsApi } from '../utils/api';\n\nconst { Column } = Table;\n\nconst Stats = () => {\n  const { id } = useParams();\n  const [tableData, setTableData] = useState([]);\n  const [chartsData, setChartsData] = useState([]);\n  useEffect(() => {\n    StatsApi({ id }).then((res) => {\n      let newTable = [];\n      res.data.tableData.forEach((element) => {\n        newTable.push({\n          ...element,\n          key: element._id,\n          agent: element.agent.name,\n          createTime: new Date(element.createTime).toLocaleString(),\n        });\n      });\n      setTableData(newTable);\n      let newCharts = [];\n      for (let city in res.data.chartsData) {\n        newCharts.push({\n          key: city,\n          city: city,\n          count: res.data.chartsData[city],\n        });\n      }\n      setChartsData(newCharts);\n    });\n  }, []);\n\n  const onChange = (value) => {\n    const createTime = new Date(value._d).getTime();\n\n    StatsApi({ id, createTime }).then((res) => {\n      let newTable = [];\n      res.data.tableData.forEach((element) => {\n        newTable.push({\n          ...element,\n          key: element._id,\n          agent: element.agent.name,\n          createTime: new Date(element.createTime).toLocaleString(),\n        });\n      });\n      setTableData(newTable);\n      let newCharts = [];\n      for (let city in res.data.chartsData) {\n        newCharts.push({\n          key: city,\n          city: city,\n          count: res.data.chartsData[city],\n        });\n      }\n      setChartsData(newCharts);\n    });\n  };\n  return (\n    <div>\n      <Row>\n        <Col span={8}>统计图</Col>\n        <Col span={8} offset={8}>\n          <DatePicker onChange={onChange} />\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={12}>\n          <Bar\n            data={chartsData}\n            xField={'count'}\n            yField={'city'}\n            scrollbar={{\n              type: 'vertical',\n            }}\n            style={{ height: '100%' }}\n          />\n        </Col>\n        <Col span={12}>\n          <Table dataSource={tableData}>\n            <Column title=\"代理\" key=\"agent\" dataIndex=\"agent\" />\n            <Column title=\"地区\" key=\"city\" dataIndex=\"city\" />\n            <Column title=\"系统\" key=\"system\" dataIndex=\"system\" />\n            <Column title=\"浏览器\" key=\"broser\" dataIndex=\"broser\" />\n            <Column title=\"时间\" key=\"createTime\" dataIndex=\"createTime\" />\n          </Table>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Stats;\n","import axios from 'axios';\nimport { message } from 'antd';\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_PORT,\n});\n\nhttp.interceptors.request.use(\n  (config) => {\n    if (localStorage.__web_token) {\n      config.headers.Authorization = 'Bearer ' + localStorage.__web_token;\n    }\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nhttp.interceptors.response.use(\n  (res) => {\n    if (res.data.message) {\n      message.success(res.data.message);\n    }\n    return res;\n  },\n  (err) => {\n    if (err.response.status === 401) {\n      localStorage.removeItem('__web_token');\n      console.log(window.location.pathname.indexOf('login'));\n\n      if (window.location.pathname.indexOf('login') === -1) {\n        window.location.pathname = '/login';\n      }\n    }\n    if (err.response.data) {\n      message.error(err.response.data);\n      return Promise.reject(err);\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default http;\n","import http from './http';\n\nexport const LoginApi = (model) => http.post('/login', model);\n\nexport const RegisterApi = (model) => http.post('/register', model);\n\nexport const UserApi = () => http.get('/user');\n\nexport const UserEditApi = (model) => http.put('/user', model);\n\nexport const UrlApi = () => http.get('/url');\n\nexport const UrlAddApi = (model) => http.post('/url', model);\n\nexport const UrlEditApi = (model) => http.put('/url', model);\n\nexport const UrlDelApi = (params) => http.delete('/url', { params });\n\nexport const AgentApi = () => http.get('/agent');\n\nexport const AgentAddApi = (model) => http.post('/agent', model);\n\nexport const AgentEditApi = (model) => http.put('/agent', model);\n\nexport const AgentDelApi = (params) => http.delete('/agent', { params });\n\nexport const PromotionApi = () => http.get('/promotion');\n\nexport const PromotionEditApi = (model) => http.post('/promotion', model);\n\nexport const StatsApi = (model) => http.put('/stats', model);\n\nexport const StatsSearchApi = (model) => http.post('/stats', model);\n\nexport const HomeApi = () => http.get('/stats');\n\nexport const CommonImgApi = (model) => http.put('/common', model);\n\nexport const CommonDataApi = (model) => http.post('/common', model);\n"],"names":["Column","Table","id","useParams","useState","tableData","setTableData","chartsData","setChartsData","useEffect","StatsApi","then","res","newTable","data","forEach","element","push","key","_id","agent","name","createTime","Date","toLocaleString","newCharts","city","count","span","offset","onChange","value","_d","getTime","gutter","xField","yField","scrollbar","type","style","height","dataSource","title","dataIndex","http","axios","baseURL","process","interceptors","request","use","config","localStorage","__web_token","headers","Authorization","err","Promise","reject","response","message","status","removeItem","console","log","window","location","pathname","indexOf","LoginApi","model","RegisterApi","UserApi","UserEditApi","UrlApi","UrlAddApi","UrlEditApi","UrlDelApi","params","AgentApi","AgentAddApi","AgentEditApi","AgentDelApi","PromotionApi","PromotionEditApi","HomeApi","CommonImgApi","CommonDataApi"],"sourceRoot":""}